apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: project-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: project-system/project-serving-cert
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: firstmates.crew.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: XG4=
      service:
        name: project-webhook-service
        path: /convert-firstmates
  group: crew.testproject.org
  names:
    kind: FirstMate
    plural: firstmates
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: project-system/project-serving-cert
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: krakens.creatures.testproject.org
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: XG4=
      service:
        name: project-webhook-service
        path: /convert-kraken
  group: creatures.testproject.org
  names:
    kind: Kraken
    plural: krakens
  scope: Cluster
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v2alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: project-system/project-serving-cert
  name: project-test-mutating-webhook-cfg
  namespace: project-system
webhooks:
- clientConfig:
    caBundle: XG4=
    service:
      name: project-webhook-service
      namespace: project-system
      path: /foo
  failurePolicy: Fail
  name: foo-webhook.foo.com
  namespaceSelector:
    matchExpressions:
    - key: control-plane
      operator: DoesNotExist
  rules:
  - apiGroups:
    - core
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
- clientConfig:
    caBundle: XG4=
    service:
      name: project-webhook-service
      namespace: project-system
      path: /bar
  failurePolicy: Fail
  name: bar-webhook.foo.com
  namespaceSelector:
    matchExpressions:
    - key: control-plane
      operator: DoesNotExist
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    certmanager.k8s.io/inject-ca-from: project-system/project-serving-cert
  name: project-test-validating-webhook-cfg
  namespace: project-system
webhooks:
- clientConfig:
    caBundle: XG4=
    service:
      name: project-webhook-service
      namespace: project-system
      path: /baz
  failurePolicy: Fail
  name: baz-webhook.foo.com
  namespaceSelector:
    matchExpressions:
    - key: control-plane
      operator: DoesNotExist
  rules:
  - apiGroups:
    - crew
    apiVersions:
    - v1
    operations:
    - DELETE
    resources:
    - firstmates
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: project-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - crew.testproject.org
  resources:
  - firstmates/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ship.testproject.org
  resources:
  - frigates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ship.testproject.org
  resources:
  - frigates/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - policy.testproject.org
  resources:
  - healthcheckpolicies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - policy.testproject.org
  resources:
  - healthcheckpolicies/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - creatures.testproject.org
  resources:
  - krakens
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - creatures.testproject.org
  resources:
  - krakens/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: project-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: project-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: project-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: project-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: project-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: project-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: project-controller-manager-metrics-service
  namespace: project-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: project-controller-manager-service
  namespace: project-system
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: v1
kind: Service
metadata:
  name: project-webhook-service
  namespace: project-system
spec:
  ports:
  - port: 443
  selector:
    additionallabels: foo
    app: webhook-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: project-controller-manager
  namespace: project-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: project-controller-manager-service
  template:
    metadata:
      labels:
        additional-label: foo
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        command:
        - /manager
        image: IMAGE_URL
        imagePullPolicy: Always
        name: manager
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: project-serving-cert
  namespace: project-system
spec:
  commonName: project-webhook-service.project-system.svc
  dnsNames:
  - project-webhook-service.project-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: project-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: project-selfsigned-issuer
  namespace: project-system
spec:
  selfSigned: {}
